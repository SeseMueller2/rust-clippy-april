error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:15:5
   |
LL |     matches!(maybe_some, None if !boolean)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `maybe_some.is_none() && (!boolean)`
   |
   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::redundant_pattern_matching)]`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:19:13
   |
LL |     let _ = matches!(maybe_some, None if boolean || boolean2); // guard needs parentheses
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `maybe_some.is_none() && (boolean || boolean2)`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:33:12
   |
LL |     if let None = None::<()> {}
   |     -------^^^^------------- help: try: `if None::<()>.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:35:12
   |
LL |     if let Some(_) = Some(42) {}
   |     -------^^^^^^^----------- help: try: `if Some(42).is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:37:12
   |
LL |     if let Some(_) = Some(42) {
   |     -------^^^^^^^----------- help: try: `if Some(42).is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:43:15
   |
LL |     while let Some(_) = Some(42) {}
   |     ----------^^^^^^^----------- help: try: `while Some(42).is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:45:15
   |
LL |     while let None = Some(42) {}
   |     ----------^^^^----------- help: try: `while Some(42).is_none()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:47:15
   |
LL |     while let None = None::<()> {}
   |     ----------^^^^------------- help: try: `while None::<()>.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:50:15
   |
LL |     while let Some(_) = v.pop() {
   |     ----------^^^^^^^---------- help: try: `while v.pop().is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:58:5
   |
LL | /     match Some(42) {
LL | |         Some(_) => true,
LL | |         None => false,
LL | |     };
   | |_____^ help: try: `Some(42).is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:63:5
   |
LL | /     match None::<()> {
LL | |         Some(_) => false,
LL | |         None => true,
LL | |     };
   | |_____^ help: try: `None::<()>.is_none()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:68:13
   |
LL |       let _ = match None::<()> {
   |  _____________^
LL | |         Some(_) => false,
LL | |         None => true,
LL | |     };
   | |_____^ help: try: `None::<()>.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:74:20
   |
LL |     let _ = if let Some(_) = opt { true } else { false };
   |             -------^^^^^^^------ help: try: `if opt.is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:80:20
   |
LL |     let _ = if let Some(_) = gen_opt() {
   |             -------^^^^^^^------------ help: try: `if gen_opt().is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:82:19
   |
LL |     } else if let None = gen_opt() {
   |            -------^^^^------------ help: try: `if gen_opt().is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:88:12
   |
LL |     if let Some(..) = gen_opt() {}
   |     -------^^^^^^^^------------ help: try: `if gen_opt().is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:103:12
   |
LL |     if let Some(_) = Some(42) {}
   |     -------^^^^^^^----------- help: try: `if Some(42).is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:105:12
   |
LL |     if let None = None::<()> {}
   |     -------^^^^------------- help: try: `if None::<()>.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:107:15
   |
LL |     while let Some(_) = Some(42) {}
   |     ----------^^^^^^^----------- help: try: `while Some(42).is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:109:15
   |
LL |     while let None = None::<()> {}
   |     ----------^^^^------------- help: try: `while None::<()>.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:111:5
   |
LL | /     match Some(42) {
LL | |         Some(_) => true,
LL | |         None => false,
LL | |     };
   | |_____^ help: try: `Some(42).is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:116:5
   |
LL | /     match None::<()> {
LL | |         Some(_) => false,
LL | |         None => true,
LL | |     };
   | |_____^ help: try: `None::<()>.is_none()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:124:12
   |
LL |     if let None = *(&None::<()>) {}
   |     -------^^^^----------------- help: try: `if (&None::<()>).is_none()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:125:12
   |
LL |     if let None = *&None::<()> {}
   |     -------^^^^--------------- help: try: `if (&None::<()>).is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:131:5
   |
LL | /     match x {
LL | |         Some(_) => true,
LL | |         _ => false,
LL | |     };
   | |_____^ help: try: `x.is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:136:5
   |
LL | /     match x {
LL | |         None => true,
LL | |         _ => false,
LL | |     };
   | |_____^ help: try: `x.is_none()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:141:5
   |
LL | /     match x {
LL | |         Some(_) => false,
LL | |         _ => true,
LL | |     };
   | |_____^ help: try: `x.is_none()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:146:5
   |
LL | /     match x {
LL | |         None => false,
LL | |         _ => true,
LL | |     };
   | |_____^ help: try: `x.is_some()`

error: redundant pattern matching, consider using `is_some()`
  --> tests/ui/redundant_pattern_matching_option.rs:161:13
   |
LL |     let _ = matches!(x, Some(_));
   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `x.is_some()`

error: redundant pattern matching, consider using `is_none()`
  --> tests/ui/redundant_pattern_matching_option.rs:163:13
   |
LL |     let _ = matches!(x, None);
   |             ^^^^^^^^^^^^^^^^^ help: try: `x.is_none()`

error: aborting due to 30 previous errors

